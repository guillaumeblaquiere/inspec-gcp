# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

require 'google/compute/property/instance_disks'
require 'google/compute/property/instance_guest_accelerators'
require 'google/compute/property/instance_network_interfaces'
require 'google/compute/property/instance_scheduling'
require 'google/compute/property/instance_service_accounts'
require 'google/compute/property/instance_tags'
require 'google/hash_utils'
require 'inspec/resource'

# A provider to manage Google Compute Engine resources.
class Instance < Inspec.resource(1)

  name 'google_compute_instance'
  desc 'Instance'
  supports platform: 'gcp2'

  attr_reader :can_ip_forward
  attr_reader :cpu_platform
  attr_reader :creation_timestamp
  attr_reader :disks
  attr_reader :guest_accelerators
  attr_reader :id
  attr_reader :label_fingerprint
  attr_reader :metadata
  attr_reader :machine_type
  attr_reader :min_cpu_platform
  attr_reader :name
  attr_reader :network_interfaces
  attr_reader :scheduling
  attr_reader :service_accounts
  attr_reader :status
  attr_reader :status_message
  attr_reader :tags
  def base
    'https://www.googleapis.com/compute/v1/'
  end

  def url
    'projects/{{project}}/zones/{{zone}}/instances/{{name}}'
  end

  def initialize(params)
    @fetched = fetch_resource(params)
    parse unless @fetched.nil?
  end

  def fetch_resource(params)
    get_request = inspec.backend.fetch(base, url, params)
  end

  def initialize(params)
    @fetched = fetch_resource(params)
    parse unless @fetched.nil?
  end

  def fetch_resource(params)
    get_request = inspec.backend.fetch(base, url, params)
  end

  def parse
    @can_ip_forward = @fetched['canIpForward']
    @cpu_platform = @fetched['cpuPlatform']
    @creation_timestamp = @fetched['creationTimestamp']
    @disks = Google::Compute::Property::InstanceDisksArray.parse(@fetched['disks'])
    @guest_accelerators = Google::Compute::Property::InstanceGuestacceleratorsArray.parse(@fetched['guestAccelerators'])
    @id = @fetched['id']
    @label_fingerprint = @fetched['labelFingerprint']
    @metadata = @fetched['metadata']
    @machine_type = @fetched['machineType']
    @min_cpu_platform = @fetched['minCpuPlatform']
    @name = @fetched['name']
    @network_interfaces = Google::Compute::Property::InstanceNetworkinterfacesArray.parse(@fetched['networkInterfaces'])
    @scheduling = Google::Compute::Property::InstanceScheduling.new(@fetched['scheduling'])
    @service_accounts = Google::Compute::Property::InstanceServiceaccountsArray.parse(@fetched['serviceAccounts'])
    @status = @fetched['status']
    @status_message = @fetched['statusMessage']
    @tags = Google::Compute::Property::InstanceTags.new(@fetched['tags'])
  end

  def exists?
    !@fetched.nil?
  end

end
