# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

require 'inspec/resource'
class Firewalls < Inspec.resource(1)

  name 'google_compute_firewalls'
  desc 'Firewall plural resource'
  supports platform: 'gcp2'

  filter_table_config = FilterTable.create

  filter_table_config.add(:alloweds, field: :allowed)
  filter_table_config.add(:creation_timestamps, field: :creationTimestamp)
  filter_table_config.add(:denieds, field: :denied)
  filter_table_config.add(:descriptions, field: :description)
  filter_table_config.add(:destination_ranges, field: :destinationRanges)
  filter_table_config.add(:directions, field: :direction)
  filter_table_config.add(:disableds, field: :disabled)
  filter_table_config.add(:ids, field: :id)
  filter_table_config.add(:names, field: :name)
  filter_table_config.add(:networks, field: :network)
  filter_table_config.add(:priorities, field: :priority)
  filter_table_config.add(:source_ranges, field: :sourceRanges)
  filter_table_config.add(:source_service_accounts, field: :sourceServiceAccounts)
  filter_table_config.add(:source_tags, field: :sourceTags)
  filter_table_config.add(:target_service_accounts, field: :targetServiceAccounts)
  filter_table_config.add(:target_tags, field: :targetTags)

  filter_table_config.connect(self, :fetch_data)

  def base
    'https://www.googleapis.com/compute/v1/'
  end

  def url
    'projects/{{project}}/global/firewalls'
  end

  def initialize(params = {}) 
    @params = params
  end

  def fetch_resource(params)
    inspec.backend.fetch_all(base, url, params)
  end

  def fetch_data
  	@data = fetch_wrapped_resource('compute#firewallList', 'items')
  end

  def fetch_wrapped_resource(wrap_kind, wrap_path)
    # fetch_resource returns an array of responses (to handle pagination)
    result = fetch_resource(@params)
    return if result.nil?

    # Conversion of string -> object hash to symbol -> object hash that InSpec needs
    converted = []
    result.each do |response|
      return if response.nil? || !response.key?(wrap_path)
      response[wrap_path].each do |hash|
        hash_with_symbols = {}
        hash.each_pair { |k, v| hash_with_symbols[k.to_sym] = v }
        converted.push(hash_with_symbols)
      end
    end

    converted
  end

end
