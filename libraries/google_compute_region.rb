# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

require 'google/compute/property/region_deprecated'
require 'inspec/resource'

# A provider to manage Google Compute Engine resources.
class Region < Inspec.resource(1)

  name 'google_compute_region'
  desc 'Region'
  supports platform: 'gcp2'

  attr_reader :creation_timestamp
  attr_reader :deprecated
  attr_reader :description
  attr_reader :id
  attr_reader :name
  attr_reader :zones
  def base
    'https://www.googleapis.com/compute/v1/'
  end

  def url
    'projects/{{project}}/regions/{{name}}'
  end

  def initialize(params)
    @fetched = fetch_resource(params)
    parse unless @fetched.nil?
  end

  def fetch_resource(params)
    get_request = inspec.backend.fetch(base, url, params)
  end

  def initialize(params)
    @fetched = fetch_resource(params)
    parse unless @fetched.nil?
  end

  def fetch_resource(params)
    get_request = inspec.backend.fetch(base, url, params)
  end

  def parse
    @creation_timestamp = DateTime.parse(@fetched['creationTimestamp'])
    @deprecated = Google::Compute::Property::RegionDeprecated.new(@fetched['deprecated'])
    @description = @fetched['description']
    @id = @fetched['id']
    @name = @fetched['name']
    @zones = @fetched['zones']
  end

  def exists?
    !@fetched.nil?
  end
end
